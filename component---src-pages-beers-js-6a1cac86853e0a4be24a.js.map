{"version":3,"sources":["webpack:///./src/pages/beers.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["HeaderStyling","styled","h1","withConfig","displayName","componentId","Beers","_useState","useState","beers","setBeers","useEffect","fetch","method","then","resp","json","data","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","map","beer","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","id","name","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","gatsby_browser_entry","Layout","header","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-beers-js-6a1cac86853e0a4be24a.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport fetch from \"node-fetch\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport styled from \"styled-components\"\r\n\r\nconst HeaderStyling = styled.h1`\r\n  color: blue;\r\n`\r\n\r\nconst Beers = () => {\r\n  const [beers, setBeers] = useState(false);\r\n  useEffect(() => {\r\n    let url = `https://api.punkapi.com/v2/beers/`;\r\n    fetch(url, {method: 'get'}).then(resp => resp.json()).then(data => setBeers(data));\r\n    console.log(beers);\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Page three\" />\r\n      {beers && beers.map(beer => {\r\n        return (\r\n          <Link to={\"/beer/\" + beer.id}><HeaderStyling>{beer.name}</HeaderStyling></Link>\r\n        )\r\n      })}\r\n      <p>Welcome to page 2</p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Beers\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <div>\r\n      <h1>\r\n        <Link to=\"/\">\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}