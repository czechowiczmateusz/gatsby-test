{"version":3,"sources":["webpack:///./src/pages/beers.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/node-fetch/browser.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","node_fetch__WEBPACK_IMPORTED_MODULE_2__","node_fetch__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","SecondPage","_useState","useState","useEffect","fetch","method","then","resp","json","data","console","log","a","createElement","title","rel","href","require","className","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","header","paddingTop","Date","getFullYear","_755544856","node","global","self","window","Error","getGlobal","bind","Headers","Request","Response"],"mappings":"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","file":"component---src-pages-beers-js-c6e829732aa333a8423e.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport fetch from \"node-fetch\";\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst SecondPage = () => {\r\n  const [data, setData] = useState(false);\r\n  useEffect(() => {\r\n    let url = `https://api.punkapi.com/v2/beers`;\r\n    fetch(url, {method: 'get'}).then(resp => resp.json()).then(data => console.log(data));\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Page three\" />\r\n      <template><link rel=\"stylesheet\" href={require('./../components/header.css')}/></template>\r\n      <h1 className=\"test test-new\">Hi from the second page</h1>\r\n      <p>Welcome to page 2</p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SecondPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;"],"sourceRoot":""}